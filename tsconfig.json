{
  "display": "Node 20",
  "compilerOptions": {
    // https://github.com/tsconfig/bases/blob/main/bases/node20.json
    "lib": ["es2023", "dom"],
    "module": "esnext", // commonjs
    "target": "es2022", // es5,es6,es2020,es2021,es2022

    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "moduleResolution": "node",

    "jsx": "react", // 允许jsx语法
    "allowJs": true,
    // vscode 中 "javascript.validate.enable": false, 则无法开启tscheck
    "checkJs": true, // 默认是否开启js类型检查，文件中通过@ts-check @ts-nocheck 开启、关闭！
    "noEmit": true, // 不输出，仅类型检查，因为开启了 allowJs，否则提示同名文件无法输出错误
    "resolveJsonModule": true,
    "skipLibCheck": true, // 跳过.d.ts类型声明文件的类型检查。这样可以加快编译速度。
    "skipDefaultLibCheck": true, // 跳过 TypeScript 内置类型声明文件的类型检查
    "allowArbitraryExtensions": true, // 允许import 非js、ts、jsx、tsx文件
    "isolatedModules": true, // 某些代码无法通过单文件转译过程正确解释时向您发出警告。
    "strictNullChecks": false, // null、undefined 可赋给其他类型
    "useUnknownInCatchVariables": false,
    "baseUrl": ".", // 解析非相对模块的基地址，默认是当前目录
    "outDir": "./dist", // 指定输出目录

    "noImplicitAny": true, // 不允许隐式的any类型
    "removeComments": true, // 删除注释
    "preserveConstEnums": true, // 保留 const 和 enum 声明
    "noFallthroughCasesInSwitch": true, // 防止switch语句贯穿(即如果没有break语句后面不会执行)
    // "declaration": false, // 生成声明文件，开启后会自动生成声明文件
    // "declarationDir": "./typing", // 指定生成声明文件存放目录
    // "emitDeclarationOnly": true, // 只生成声明文件，不生成js文件
    "sourceMap": false // 生成目标文件的sourceMap文件，用于调试
  },
  "include": ["src/**/*", "test/jsdoc/*", "test/12306.js"],
  "exclude": ["node_modules", "bin"]
}
